close all;
clear;
[y,fs] = audioread('music_noisy.wav');

[N,P] = size(y);
f=-fs/2:fs/(N-1):fs/2;
x = fft(y);
z = fftshift(x);
hh = filter(lowpass_butter,y);
yy = filter(bandpass,y);
xx = filter(highpass,y);

res = hh+yy+xx;

audiowrite('filtered.wav',res,fs);
[y2,fs2] = audioread('filtered.wav');


[N2,P2] = size(y2);
f2=-fs2/2:fs2/(N-1):fs2/2;
x2 = fft(y2);
z2 = fftshift(x2);
subplot(2,1,1);
plot(f,abs(z));
subplot(2,1,2);
plot(f2,abs(z2));


function Hd = lowpass_butter
%LOWPASS_BUTTER Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.13 and Signal Processing Toolbox 9.1.
% Generated on: 04-Dec-2022 01:04:44

% Butterworth Lowpass filter designed using FDESIGN.LOWPASS.

% All frequency values are in Hz.
Fs = 22050;  % Sampling Frequency

N  = 100;     % Order
Fc = 1000;  % Cutoff Frequency

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.lowpass('N,F3dB', N, Fc, Fs);
Hd = design(h, 'butter');
end
% [EOF]

function Hd = bandpass
%BANDPASS Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.13 and Signal Processing Toolbox 9.1.
% Generated on: 05-Dec-2022 23:09:43

% Butterworth Bandpass filter designed using FDESIGN.BANDPASS.

% All frequency values are in Hz.
Fs = 22050;  % Sampling Frequency

Fstop1 = 1000;        % First Stopband Frequency
Fpass1 = 1150;        % First Passband Frequency
Fpass2 = 2720;        % Second Passband Frequency
Fstop2 = 2770;        % Second Stopband Frequency
Astop1 = 20;          % First Stopband Attenuation (dB)
Apass  = 1;           % Passband Ripple (dB)
Astop2 = 80;          % Second Stopband Attenuation (dB)
match  = 'stopband';  % Band to match exactly

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.bandpass(Fstop1, Fpass1, Fpass2, Fstop2, Astop1, Apass, ...
                      Astop2, Fs);
Hd = design(h, 'butter', 'MatchExactly', match);
end

function Hd = highpass
%HIGHPASS Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.13 and Signal Processing Toolbox 9.1.
% Generated on: 06-Dec-2022 20:37:11

% Butterworth Highpass filter designed using FDESIGN.HIGHPASS.

% All frequency values are in Hz.
Fs = 22050;  % Sampling Frequency

Fstop = 2750;        % Stopband Frequency
Fpass = 2820;        % Passband Frequency
Astop = 50;          % Stopband Attenuation (dB)
Apass = 4;           % Passband Ripple (dB)
match = 'stopband';  % Band to match exactly

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.highpass(Fstop, Fpass, Astop, Apass, Fs);
Hd = design(h, 'butter', 'MatchExactly', match);
end
% [EOF]



